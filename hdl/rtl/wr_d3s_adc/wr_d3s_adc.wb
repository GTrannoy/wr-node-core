-- -*- Mode: LUA; tab-width: 2 -*-

peripheral {
    name = "WR D3S WB";
   prefix="d3s";

	 hdl_entity="d3s_adc_wb";
	 
-- TXTSU shared FIFO

	 fifo_reg {
			size = 256; -- or more. We'll see :)
			direction = CORE_TO_BUS;
			prefix = "adc";
			name = "ADC Data FIFO";

			flags_bus = {FIFO_FULL, FIFO_EMPTY, FIFO_COUNT, FIFO_CLEAR};
			flags_dev = {FIFO_FULL, FIFO_EMPTY};
			
			field {
				 name = "Timestamp";
				 prefix = "tstamp";
				 type = SLV;
				 size = 28;
			};

			field {
				 name = "Run Length Enable";
				 prefix = "IS_RL";
				 type = BIT;
			};

			field {
				 name = "Run Length";
				 prefix = "RL_LENGTH";
				 size = 16;
				 type = SLV;
			};

			field {
				 name = "Phase";
				 prefix = "RL_PHASE";
				 size = 32;
				 type = SLV;
			};
	 };

	 reg {
			name = "SSR Reg";
			prefix = "SSR";
			field {
				 name = "SSR Outputs";
				 type = SLV;
				 size = 32;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
				 clock = "clk_wr_i";
			};
	 };

	 reg {
			name = "GPIO Reg";
			prefix = "GPIOR";
			field {
				 prefix = "SI57X_SCL";
				 name = "SI57X_SCL";
				 type = BIT;
				 access_dev = READ_WRITE;
				 access_bus = READ_WRITE;
				 load = LOAD_EXT;
			};

			field {
				 prefix = "SI57X_SDA";
				 name = "SI57X_SDA";
				 type = BIT;
				 access_dev = READ_WRITE;
				 access_bus = READ_WRITE;
				 load = LOAD_EXT;
			};

			field {
				 prefix = "SPI_CS_ADC";
				 name = "SPI_CS_ADC";
				 type = BIT;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
			};
			
			field {
				 prefix = "SPI_SCK";
				 name = "SPI_SCK";
				 type = BIT;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
			};
			
			field {
				 prefix = "SPI_MOSI";
				 name = "SPI_MOSI";
				 type = BIT;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
			};

			field {
				 prefix = "SPI_MISO";
				 name = "SPI_MISO";
				 type = BIT;
				 access_dev = WRITE_ONLY;
				 access_bus = READ_ONLY;
			};

			field {
				 prefix = "TM_LOCK_EN";
				 name = "TM_LOCK_EN";
				 type = BIT;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
			};
			field {
				 prefix = "TM_LOCKED";
				 name = "TM_LOCKED";
				 type = BIT;
				 access_dev = WRITE_ONLY;
				 access_bus = READ_ONLY;
			};
			field {
				 prefix = "TM_TIME_VALID";
				 name = "TM_TIME_VALID";
				 type = BIT;
				 access_dev = WRITE_ONLY;
				 access_bus = READ_ONLY;
			};

			
	 };

	 reg {
			name = "Control Reg";
			prefix = "CR";

			field {
				 prefix = "ENABLE";
				 name = "ENABLE";
				 type = BIT;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
			};

	 };

	 reg {
			name = "Error min";
			prefix = "RL_ERR_MIN";

			field {
				 name = "MinError";
				 type = SLV;
				 size = 32;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
				 clock = "clk_wr_i";
			};

	 };
	 reg {
			name = "Error max";
			prefix = "RL_ERR_MAX";

			field {
				 name = "MaxError";
				 type = SLV;
				 size = 32;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
				 clock = "clk_wr_i";
			};

	 };

	 reg {
			name = "Max run length";
			prefix = "RL_LENGTH_MAX";

			field {
				 name = "RLMax";
				 type = SLV;
				 size = 16;
				 access_dev = READ_ONLY;
				 access_bus = READ_WRITE;
				 clock = "clk_wr_i";
			};

	 };
	 

};

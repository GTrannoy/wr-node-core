-- -*- Mode: LUA; tab-width: 2 -*-

peripheral {
	 name = "WR Node CPU Control/Status registers block";
	 prefix = "wrn_cpu_csr";
	 hdl_entity = "wrn_cpu_csr_wb_slave";

	 reg {
			name = "Application ID Register";
 		  prefix = "APP_ID";
 			
			field {
			   name = "User application ID";
		   
				 type = SLV;
				 size = 32;
				 access_bus = READ_ONLY;
				 access_dev = WRITE_ONLY;
			};
	 };

	 reg {
			name = "CPU Reset Register";
			prefix = "RESET";

			field {
				 name = "CPU reset lines";
				 size = 8;
				 type = SLV;
				 access_bus = READ_WRITE;
				 access_dev = READ_ONLY;
			};
	 };

	 reg {
			name = "CPU Enable Register";
			prefix = "ENABLE";

			field {
				 name = "CPU enable lines";
				 size = 8;
				 type = SLV;
				 access_bus = READ_WRITE;
				 access_dev = READ_ONLY;
			};
	 };

	 reg {
			name = "CPU Upload Address Register";
			prefix = "UADDR";

			field {
				 name = "Address";
				 prefix = "ADDR";				 
				 size = 20;
				 type = SLV;
				 access_bus = READ_WRITE;
				 access_dev = READ_ONLY;
			};
	 };

   reg {
      name = "Core Select Register";
      prefix = "CORE_SEL";
			field {
				 name = "CPU core select";
				 size = 4;
				 type = SLV;
				 access_bus = READ_WRITE;
				 access_dev = READ_ONLY;
			};
   };
  
  reg {
      name = "Core Count Register";
      prefix = "CORE_COUNT";
			field {
				 name = "Number of CPU Cores";
				 size = 4;
				 type = SLV;
				 access_bus = READ_ONLY;
				 access_dev = WRITE_ONLY;
			};
   };

  reg {
      name = "Core Memory Size";
      prefix = "CORE_MEMSIZE";
			field {
				 name = "Memory size for the selected core.";
				 size = 16;
				 type = SLV;
				 access_bus = READ_ONLY;
				 access_dev = WRITE_ONLY;
			};
   };

	 reg {
			name = "CPU Upload Data Register";
			prefix = "UDATA";

			field {
				 name = "CPU IRAM read/write data";
				 size = 32;
				 type = SLV;
				 access_bus = READ_WRITE;
				 access_dev = READ_WRITE;
				 load = LOAD_EXT;
			};
	 };

   reg {
      name = "CPU Debug Register";
      prefix = "DEBUG";
      
      field {
         name = "JTAG data";
         prefix = "jdata";
         size = 8;
         type = SLV;
         access_bus = READ_WRITE;
         access_dev = READ_WRITE;
         load = LOAD_EXT;
      };

      
      field {
         name = "JTAG address";
         prefix = "jaddr";
         align = 8;
         size = 3;
         type = SLV;
         access_bus = READ_WRITE;
         access_dev = READ_WRITE;
         load = LOAD_EXT;

      };

      field {
         name = "JTAG reset";
         prefix = "rstn";
         align = 8;
         type = BIT;
         access_bus = READ_WRITE;
         access_dev = READ_WRITE;
         load = LOAD_EXT;

      };

      field {
         name = "JTAG TCK";
         prefix = "tck";
         type = BIT;
         access_bus = READ_WRITE;
         access_dev = READ_WRITE;
         load = LOAD_EXT;

      };

      field {
         name = "JTAG Update";
         prefix = "update";
         type = BIT;
         access_bus = READ_WRITE;
         access_dev = READ_WRITE;
         load = LOAD_EXT;
      };
   };
};


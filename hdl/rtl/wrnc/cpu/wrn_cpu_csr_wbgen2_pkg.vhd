---------------------------------------------------------------------------------------
-- Title          : Wishbone slave core for WR Node CPU Control/Status registers block
---------------------------------------------------------------------------------------
-- File           : wrn_cpu_csr_wbgen2_pkg.vhd
-- Author         : auto-generated by wbgen2 from wrn_cpu_csr.wb
-- Created        : Thu Jul 23 14:28:06 2015
-- Standard       : VHDL'87
---------------------------------------------------------------------------------------
-- THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE wrn_cpu_csr.wb
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
---------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package wrn_cpu_csr_wbgen2_pkg is
  
  
  -- Input registers (user design -> WB slave)
  
  type t_wrn_cpu_csr_in_registers is record
    app_id_i                                 : std_logic_vector(31 downto 0);
    core_count_i                             : std_logic_vector(3 downto 0);
    core_memsize_i                           : std_logic_vector(15 downto 0);
    udata_i                                  : std_logic_vector(31 downto 0);
    dbg_jtag_jdata_i                         : std_logic_vector(7 downto 0);
    dbg_jtag_jaddr_i                         : std_logic_vector(2 downto 0);
    dbg_jtag_rstn_i                          : std_logic;
    dbg_jtag_tck_i                           : std_logic;
    dbg_jtag_update_i                        : std_logic;
    dbg_msg_data_i                           : std_logic_vector(7 downto 0);
    dbg_poll_ready_i                         : std_logic_vector(7 downto 0);
    end record;
  
  constant c_wrn_cpu_csr_in_registers_init_value: t_wrn_cpu_csr_in_registers := (
    app_id_i => (others => '0'),
    core_count_i => (others => '0'),
    core_memsize_i => (others => '0'),
    udata_i => (others => '0'),
    dbg_jtag_jdata_i => (others => '0'),
    dbg_jtag_jaddr_i => (others => '0'),
    dbg_jtag_rstn_i => '0',
    dbg_jtag_tck_i => '0',
    dbg_jtag_update_i => '0',
    dbg_msg_data_i => (others => '0'),
    dbg_poll_ready_i => (others => '0')
    );
    
    -- Output registers (WB slave -> user design)
    
    type t_wrn_cpu_csr_out_registers is record
      reset_o                                  : std_logic_vector(7 downto 0);
      enable_o                                 : std_logic_vector(7 downto 0);
      uaddr_addr_o                             : std_logic_vector(19 downto 0);
      core_sel_o                               : std_logic_vector(3 downto 0);
      udata_o                                  : std_logic_vector(31 downto 0);
      udata_load_o                             : std_logic;
      dbg_jtag_jdata_o                         : std_logic_vector(7 downto 0);
      dbg_jtag_jdata_load_o                    : std_logic;
      dbg_jtag_jaddr_o                         : std_logic_vector(2 downto 0);
      dbg_jtag_jaddr_load_o                    : std_logic;
      dbg_jtag_rstn_o                          : std_logic;
      dbg_jtag_rstn_load_o                     : std_logic;
      dbg_jtag_tck_o                           : std_logic;
      dbg_jtag_tck_load_o                      : std_logic;
      dbg_jtag_update_o                        : std_logic;
      dbg_jtag_update_load_o                   : std_logic;
      dbg_imsk_enable_o                        : std_logic_vector(7 downto 0);
      smem_op_o                                : std_logic_vector(2 downto 0);
      end record;
    
    constant c_wrn_cpu_csr_out_registers_init_value: t_wrn_cpu_csr_out_registers := (
      reset_o => (others => '0'),
      enable_o => (others => '0'),
      uaddr_addr_o => (others => '0'),
      core_sel_o => (others => '0'),
      udata_o => (others => '0'),
      udata_load_o => '0',
      dbg_jtag_jdata_o => (others => '0'),
      dbg_jtag_jdata_load_o => '0',
      dbg_jtag_jaddr_o => (others => '0'),
      dbg_jtag_jaddr_load_o => '0',
      dbg_jtag_rstn_o => '0',
      dbg_jtag_rstn_load_o => '0',
      dbg_jtag_tck_o => '0',
      dbg_jtag_tck_load_o => '0',
      dbg_jtag_update_o => '0',
      dbg_jtag_update_load_o => '0',
      dbg_imsk_enable_o => (others => '0'),
      smem_op_o => (others => '0')
      );
    function "or" (left, right: t_wrn_cpu_csr_in_registers) return t_wrn_cpu_csr_in_registers;
    function f_x_to_zero (x:std_logic) return std_logic;
    function f_x_to_zero (x:std_logic_vector) return std_logic_vector;
end package;

package body wrn_cpu_csr_wbgen2_pkg is
function f_x_to_zero (x:std_logic) return std_logic is
begin
if x = '1' then
return '1';
else
return '0';
end if;
end function;
function f_x_to_zero (x:std_logic_vector) return std_logic_vector is
variable tmp: std_logic_vector(x'length-1 downto 0);
begin
for i in 0 to x'length-1 loop
if(x(i) = 'X' or x(i) = 'U') then
tmp(i):= '0';
else
tmp(i):=x(i);
end if; 
end loop; 
return tmp;
end function;
function "or" (left, right: t_wrn_cpu_csr_in_registers) return t_wrn_cpu_csr_in_registers is
variable tmp: t_wrn_cpu_csr_in_registers;
begin
tmp.app_id_i := f_x_to_zero(left.app_id_i) or f_x_to_zero(right.app_id_i);
tmp.core_count_i := f_x_to_zero(left.core_count_i) or f_x_to_zero(right.core_count_i);
tmp.core_memsize_i := f_x_to_zero(left.core_memsize_i) or f_x_to_zero(right.core_memsize_i);
tmp.udata_i := f_x_to_zero(left.udata_i) or f_x_to_zero(right.udata_i);
tmp.dbg_jtag_jdata_i := f_x_to_zero(left.dbg_jtag_jdata_i) or f_x_to_zero(right.dbg_jtag_jdata_i);
tmp.dbg_jtag_jaddr_i := f_x_to_zero(left.dbg_jtag_jaddr_i) or f_x_to_zero(right.dbg_jtag_jaddr_i);
tmp.dbg_jtag_rstn_i := f_x_to_zero(left.dbg_jtag_rstn_i) or f_x_to_zero(right.dbg_jtag_rstn_i);
tmp.dbg_jtag_tck_i := f_x_to_zero(left.dbg_jtag_tck_i) or f_x_to_zero(right.dbg_jtag_tck_i);
tmp.dbg_jtag_update_i := f_x_to_zero(left.dbg_jtag_update_i) or f_x_to_zero(right.dbg_jtag_update_i);
tmp.dbg_msg_data_i := f_x_to_zero(left.dbg_msg_data_i) or f_x_to_zero(right.dbg_msg_data_i);
tmp.dbg_poll_ready_i := f_x_to_zero(left.dbg_poll_ready_i) or f_x_to_zero(right.dbg_poll_ready_i);
return tmp;
end function;
end package body;

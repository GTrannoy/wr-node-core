---------------------------------------------------------------------------------------
-- Title          : Wishbone slave core for Mock Turtle Trace/Priofile Unit Control Registers Block
---------------------------------------------------------------------------------------
-- File           : mt_tpu_csr_wbgen2_pkg.vhd
-- Author         : auto-generated by wbgen2 from mt_tpu_csr.wb
-- Created        : Wed Jan 25 15:13:16 2017
-- Standard       : VHDL'87
---------------------------------------------------------------------------------------
-- THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE mt_tpu_csr.wb
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
---------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package tpu_wbgen2_pkg is
  
  
  -- Input registers (user design -> WB slave)
  
  type t_tpu_in_registers is record
    csr_present_i                            : std_logic;
    csr_ready_i                              : std_logic;
    csr_probe_count_i                        : std_logic_vector(4 downto 0);
    probe_csr_pc_i                           : std_logic_vector(23 downto 0);
    probe_csr_core_id_i                      : std_logic_vector(3 downto 0);
    probe_csr_action_i                       : std_logic_vector(3 downto 0);
    buf_count_i                              : std_logic_vector(15 downto 0);
    buf_size_i                               : std_logic_vector(15 downto 0);
    buf_data_id_i                            : std_logic_vector(4 downto 0);
    buf_data_tstamp_i                        : std_logic_vector(26 downto 0);
    end record;
  
  constant c_tpu_in_registers_init_value: t_tpu_in_registers := (
    csr_present_i => '0',
    csr_ready_i => '0',
    csr_probe_count_i => (others => '0'),
    probe_csr_pc_i => (others => '0'),
    probe_csr_core_id_i => (others => '0'),
    probe_csr_action_i => (others => '0'),
    buf_count_i => (others => '0'),
    buf_size_i => (others => '0'),
    buf_data_id_i => (others => '0'),
    buf_data_tstamp_i => (others => '0')
    );
    
    -- Output registers (WB slave -> user design)
    
    type t_tpu_out_registers is record
      csr_enable_o                             : std_logic;
      csr_force_start_o                        : std_logic;
      csr_probe_sel_o                          : std_logic_vector(4 downto 0);
      probe_csr_pc_o                           : std_logic_vector(23 downto 0);
      probe_csr_pc_load_o                      : std_logic;
      probe_csr_core_id_o                      : std_logic_vector(3 downto 0);
      probe_csr_core_id_load_o                 : std_logic;
      probe_csr_action_o                       : std_logic_vector(3 downto 0);
      probe_csr_action_load_o                  : std_logic;
      buf_addr_o                               : std_logic_vector(15 downto 0);
      end record;
    
    constant c_tpu_out_registers_init_value: t_tpu_out_registers := (
      csr_enable_o => '0',
      csr_force_start_o => '0',
      csr_probe_sel_o => (others => '0'),
      probe_csr_pc_o => (others => '0'),
      probe_csr_pc_load_o => '0',
      probe_csr_core_id_o => (others => '0'),
      probe_csr_core_id_load_o => '0',
      probe_csr_action_o => (others => '0'),
      probe_csr_action_load_o => '0',
      buf_addr_o => (others => '0')
      );
    function "or" (left, right: t_tpu_in_registers) return t_tpu_in_registers;
    function f_x_to_zero (x:std_logic) return std_logic;
    function f_x_to_zero (x:std_logic_vector) return std_logic_vector;
end package;

package body tpu_wbgen2_pkg is
function f_x_to_zero (x:std_logic) return std_logic is
begin
if x = '1' then
return '1';
else
return '0';
end if;
end function;
function f_x_to_zero (x:std_logic_vector) return std_logic_vector is
variable tmp: std_logic_vector(x'length-1 downto 0);
begin
for i in 0 to x'length-1 loop
if(x(i) = 'X' or x(i) = 'U') then
tmp(i):= '0';
else
tmp(i):=x(i);
end if; 
end loop; 
return tmp;
end function;
function "or" (left, right: t_tpu_in_registers) return t_tpu_in_registers is
variable tmp: t_tpu_in_registers;
begin
tmp.csr_present_i := f_x_to_zero(left.csr_present_i) or f_x_to_zero(right.csr_present_i);
tmp.csr_ready_i := f_x_to_zero(left.csr_ready_i) or f_x_to_zero(right.csr_ready_i);
tmp.csr_probe_count_i := f_x_to_zero(left.csr_probe_count_i) or f_x_to_zero(right.csr_probe_count_i);
tmp.probe_csr_pc_i := f_x_to_zero(left.probe_csr_pc_i) or f_x_to_zero(right.probe_csr_pc_i);
tmp.probe_csr_core_id_i := f_x_to_zero(left.probe_csr_core_id_i) or f_x_to_zero(right.probe_csr_core_id_i);
tmp.probe_csr_action_i := f_x_to_zero(left.probe_csr_action_i) or f_x_to_zero(right.probe_csr_action_i);
tmp.buf_count_i := f_x_to_zero(left.buf_count_i) or f_x_to_zero(right.buf_count_i);
tmp.buf_size_i := f_x_to_zero(left.buf_size_i) or f_x_to_zero(right.buf_size_i);
tmp.buf_data_id_i := f_x_to_zero(left.buf_data_id_i) or f_x_to_zero(right.buf_data_id_i);
tmp.buf_data_tstamp_i := f_x_to_zero(left.buf_data_tstamp_i) or f_x_to_zero(right.buf_data_tstamp_i);
return tmp;
end function;
end package body;
